[package]
name = "azulc"
version = "0.0.3"
authors = ["Felix Sch√ºtt <felix.schuett@maps4print.com>"]
license = "MIT"
description = '''
    Azul XML-to-Rust compiler (and library)
'''
homepage = "https://azul.rs/"
keywords = ["gui", "GUI", "user-interface"]
categories = ["gui"]
repository = "https://github.com/maps4print/azul"
edition = "2018"

[lib]
crate-type = ["rlib", "cdylib"]
path = "src/lib.rs"

[[bin]]
name = "azulc"
path = "src/main.rs"
required-features = ["xml", "std"]

[profile.release]
opt-level = 3
lto = "fat"
panic = "abort"
codegen-units = 1
debug = false
overflow-checks = false
incremental = false

[dependencies]
gleam                   = { version = "0.13.1",          default-features = false }
xmlparser               = { version = "0.13.3",          default-features = false }
azul-core               = { path = "../azul-core",       version = "0.0.2",          default-features = false, features = ["opengl"] }
azul-css                = { path = "../azul-css",        version = "0.0.1",          default-features = false }
azul-css-parser         = { path = "../azul-css-parser", version = "0.0.1",          default-features = false }
azul-layout             = { path = "../azul-layout",     default-features = false }
image                   = { version = "0.23.12",         default-features = false,       optional = true,    features = ["gif", "jpeg", "png", "tiff", "bmp"]    }
rust-fontconfig         = { version = "0.1.1",          default-features = false,       optional = true }
lyon                    = { version = "0.15.8",  default-features = false,  optional = true }
rayon                   = { version = "1.5.0",   default-features = false,  optional = true }
usvg                    = { version = "0.13.0",  default-features = false,  optional = true }
roxmltree               = { version = "0.13.0",  default-features = false,  optional = true }
owned_ttf_parser        = { version = "0.6.0",   default-features = false,  optional = true }

[features]
std = ["azul-core/std", "azul-layout/std"]
default = ["std", "text_layout"]
# On some applications you might not want to load any images. For these purposes
# the image crate can be disabled, to speed up compile times
image_loading = ["image", "std"]
# Enables loading of ICO files on the image decoder
ico = ["image/ico"]
# Enables loading of TGA files on the image decoder
tga = ["image/tga"]
# Enables loading of HDR files on the image decoder
hdr = ["image/hdr"]
# Enables parallel JPEG decoding on the image decoder
jpeg_rayon = ["image/jpeg_rayon"]
# Enables loading of DXT files on the image decoder
dxt = ["image/dxt"]
# Enables loading of WEBP files on the image decoder
webp = ["image/webp"]
# Enables loading of PNM files on the image decoder
pnm = ["image/pnm"]
# Activates the font-loading module, important to deactivate for example
font_loading = ["rust-fontconfig", "std"]
# Text loading module, disable if you have a custom text layouting function
text_layout = ["azul-layout/text_layout"]
# The SVG rendering module is pretty huge since it needs lyon - if you don't use
# SVG rendering in your app, you can turn this off to increase compilation
# speed and decrease your binary size
svg = ["lyon", "owned_ttf_parser", "rayon", "usvg"]
# Optional XML parser
xml = ["roxmltree"]