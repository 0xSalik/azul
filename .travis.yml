language: rust

# Emulate an X11 virtual framebuffer, since Travis 
# runs on a headless system
# before_script:
#   - "export DISPLAY=:99.0"
#   - "sh -e /etc/init.d/xvfb start"
#   - sleep 3 # give xvfb some time to start

script:
  - cargo build --all
  - cargo build --examples
  - xvfb-run --server-args "-screen 0 1920x1080x24" cargo test --features "doc-test"

sudo: false

cache: cargo

rust:
  - stable
  - beta
  - nightly

matrix:
  allow_failures:
    - rust: nightly
  fast_finish: true

# env:
#   global:
#   - RUSTFLAGS="-C link-dead-code"

addons:
    apt:
      packages:
        - xvfb
    install:
      - export DISPLAY=':99.0'
      - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

# addons:
#   apt:
#     packages:
#       - libcurl4-openssl-dev
#       - libelf-dev
#       - libdw-dev
#       - cmake
#       - gcc
#       - binutils-dev
#       - libiberty-dev

# after_success: |
#   wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
#   tar xzf master.tar.gz &&
#   cd kcov-master &&
#   mkdir build &&
#   cd build &&
#   cmake .. &&
#   make &&
#   make install DESTDIR=../../kcov-build &&
#   cd ../.. &&
#   rm -rf kcov-master &&
#   for file in target/debug/azul-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
#   bash <(curl -s https://codecov.io/bash) &&
#   echo "Uploaded code coverage"