[package]
name = "azul"
version = "0.1.0"
authors = ["Felix Sch√ºtt <felix.schuett@maps4print.com>"]
description = '''
    Azul GUI is a free, functional, MVVM-oriented GUI framework
    for rapid development of desktop applications written in Rust,
    supported by the Mozilla WebRender rendering engine
'''
documentation = "https://docs.rs/azul"
homepage = "https://fschutt.github.io/azul.rs/"
keywords = ["gui", "GUI", "user interface", "svg", "graphics" ]
categories = ["gui"]
license = "MIT"
repository = "https://github.com/maps4print/azul"
readme = "README.md"
exclude = ["assets", "doc", "examples"]
autoexamples = false

[dependencies]
cassowary = "0.3.0"
simplecss = "0.1.0"
glium = "0.22.0"
gleam = "0.6"
euclid = "0.19"
rusttype = "0.6.4"
stb_truetype = "0.2.2"
app_units = "0.7"
unicode-normalization = "0.1.5"
lazy_static = "1.0.1"
tinyfiledialogs = "3.3.5"
clipboard2 = "0.1.0"
font-loader = "0.7.0"
log = "0.4.1"
fern = { version = "0.5.5", optional = true }
backtrace = { version = "0.3.9", optional = true }
lyon = { version = "0.11.0", default-features = false, optional = true }
serde = { version = "1.0", optional = true }
twox-hash = { version = "1.1.0", optional = true }

[dependencies.image]
version = "0.19.0"
default-features = false
features = ["gif_codec", "jpeg", "png_codec", "pnm", "tiff", "bmp"]

[target.'cfg(not(target_os = "linux"))'.dependencies]
nfd = "0.0.4"

[dependencies.webrender]
git = "https://github.com/servo/webrender"
rev = "58b4d2f3325726008812c0ee5ab8898e05133e60"

[dependencies.usvg]
git = "https://github.com/RazrFalcon/usvg"
rev = "eb4b3bcb3598bdb4f09c71949868e4cb192525d1"
optional = true

[features]
default = ["logging", "svg"]

# The reason we do this is because doctests don't get cfg(test)
# See: https://github.com/rust-lang/cargo/issues/4669
doc-test = []

# Some test have to be disabled for Travis, since Travis does not
# use OpenGL 3.2, so the tests will fail
#
# To actually test the library, run cargo --test --features=doc-test
no-opengl-tests = []

# Enable this feature to enable crash logging & reporting.
# Azul will insert custom panic handlers to pop up a message and log
# crashes to an "error.log" file, see AppConfig for more details
logging = ["fern", "backtrace"]

# The SVG parsing & rendering module is pretty huge - if you don't use
# SVG rendering in your app, you can turn this off to increase compilation
# speed and decrease your binary size
svg = ["lyon"]

svg_parsing = ["svg", "usvg"]

# If you want an application icon, you can either load it via the raw
# RGBA bytes or use the icon_loading feature to decode it from a PNG / JPG /
# whatever image format on startup. Note that this will import the image
# dependency and use a bit of extra runtime.
icon_loading = ["glium/icon_loading"]

# For serializing / deserializing CSS colors using serde
serde_serialization = ["serde"]

# twox-hash imports the rand crate, which takes a long time to compile
# If azul isn't using XXHash, it uses the std-library provided hash algorithm
#
# The performance hit should be negligible, so this feature is turned off by
# default. Maybe turn it on in release builds.
faster-hashing = ["twox-hash"]

[[example]]
name = "debug"
required-features = ["svg_parsing"]

[[example]]
name = "async"

[[example]]
name = "hot_reload"

[[example]]
name = "table_demo"

[[example]]
name = "test_input_field"