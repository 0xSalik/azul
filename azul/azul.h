/*
    Copyright 2017 Maps4Print Einzelunternehmung

    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:

    The above copyright notice and this permission notice shall be
    included in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/


#ifndef AZUL_GUI_H
#define AZUL_GUI_H

#pragma once

/* Generated with cbindgen:0.14.2 */

/* Warning, this file is autogenerated by cbindgen. Don't modify this file manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>


typedef struct AzLayoutInfoPtr {
  void *ptr;
} AzLayoutInfoPtr;

typedef struct AzDomPtr {
  void *ptr;
} AzDomPtr;

typedef struct AzAppConfigPtr {
  void *ptr;
} AzAppConfigPtr;

typedef struct AzCssPtr {
  void *ptr;
} AzCssPtr;

typedef struct AzWindowCreateOptionsPtr {
  void *ptr;
} AzWindowCreateOptionsPtr;

typedef struct AzAppPtr {
  void *ptr;
} AzAppPtr;

// The data model
typedef void *AzDataModelPtr;

typedef AzDomPtr (*AzLayoutCallbackPtr)(const AzDataModelPtr*, AzLayoutInfoPtr);

// Destructor: Takes ownership of the `LayoutInfo` pointer and deletes it.
void az_layout_info_delete(AzLayoutInfoPtr ptr);

AzDomPtr az_dom_div(void);

// Destructor: Takes ownership of the `Dom` pointer and deletes it.
void az_dom_delete(AzDomPtr ptr);

AzAppConfigPtr az_app_config_new(void);

// Destructor: Takes ownership of the `AppConfig` pointer and deletes it.
void az_app_config_delete(AzAppConfigPtr ptr);

AzCssPtr az_css_native(void);

// Destructor: Takes ownership of the `Css` pointer and deletes it.
void az_css_delete(AzCssPtr ptr);

AzWindowCreateOptionsPtr az_window_create_options_new(AzCssPtr css);

// Destructor: Takes ownership of the `WindowCreateOptions` pointer and deletes it.
void az_window_create_options_delete(AzWindowCreateOptionsPtr ptr);

// Creates a new App instance.
AzAppPtr az_app_new(AzDataModelPtr data, AzAppConfigPtr config, AzLayoutCallbackPtr callback);

void az_app_run(AzAppPtr app, AzWindowCreateOptionsPtr window);

// Destructor: Takes ownership of the `App` pointer and deletes it.
void az_app_delete(AzAppPtr ptr);

#endif /* AZUL_GUI_H */
